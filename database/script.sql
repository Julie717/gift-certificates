-- MySQL Script generated by MySQL Workbench
-- Mon Feb  1 13:15:39 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gift_certificates
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gift_certificates
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gift_certificates` DEFAULT CHARACTER SET utf8 ;
USE `gift_certificates` ;

-- -----------------------------------------------------
-- Table `gift_certificates`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gift_certificates`.`tag` (
  `id_tag` BIGINT NOT NULL AUTO_INCREMENT,
  `name_tag` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tag`),
  UNIQUE INDEX `name_UNIQUE` (`name_tag` ASC));


-- -----------------------------------------------------
-- Table `gift_certificates`.`gift_certificate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gift_certificates`.`gift_certificate` (
  `id_gift_certificate` BIGINT NOT NULL AUTO_INCREMENT,
  `name_gift_certificate` VARCHAR(45) NOT NULL,
  `description` VARCHAR(1000) NOT NULL,
  `price` DECIMAL NOT NULL,
  `duration` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL,
  `last_update_date` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id_gift_certificate`),
  UNIQUE INDEX `name_UNIQUE` (`name_gift_certificate` ASC));


-- -----------------------------------------------------
-- Table `gift_certificates`.`gift_certificate_tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gift_certificates`.`gift_certificate_tag` (
  `id_gift_certificate` BIGINT NOT NULL,
  `id_tag` BIGINT NOT NULL,
  INDEX `fk_gift_certificate_has_tag_tag1_idx` (`id_tag` ASC),
  INDEX `fk_gift_certificate_has_tag_gift_certificate_idx` (`id_gift_certificate` ASC),
  PRIMARY KEY (`id_gift_certificate`, `id_tag`),
  CONSTRAINT `fk_gift_certificate_has_tag_gift_certificate`
    FOREIGN KEY (`id_gift_certificate`)
    REFERENCES `gift_certificates`.`gift_certificate` (`id_gift_certificate`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gift_certificate_has_tag_tag1`
    FOREIGN KEY (`id_tag`)
    REFERENCES `gift_certificates`.`tag` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `gift_certificates`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gift_certificates`.`user` (
  `id_user` BIGINT NOT NULL AUTO_INCREMENT,
  `surname` VARCHAR(50) NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_user`));


-- -----------------------------------------------------
-- Table `gift_certificates`.`purchase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gift_certificates`.`purchase` (
  `id_purchase` BIGINT NOT NULL AUTO_INCREMENT,
  `purchase_date` TIMESTAMP NOT NULL,
  `id_user` BIGINT NOT NULL,
  `cost` DECIMAL NOT NULL,
  PRIMARY KEY (`id_purchase`),
  INDEX `fk_order_user1_idx` (`id_user` ASC),
  CONSTRAINT `fk_order_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `gift_certificates`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `gift_certificates`.`purchase_gift_certificate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gift_certificates`.`purchase_gift_certificate` (
  `id_purchase` BIGINT NOT NULL,
  `id_gift_certificate` BIGINT NOT NULL,
  PRIMARY KEY (`id_purchase`, `id_gift_certificate`),
  INDEX `fk_gift_certificate_has_order_order1_idx` (`id_purchase` ASC),
  INDEX `fk_gift_certificate_has_order_gift_certificate1_idx` (`id_gift_certificate` ASC),
  CONSTRAINT `fk_gift_certificate_has_order_gift_certificate1`
    FOREIGN KEY (`id_gift_certificate`)
    REFERENCES `gift_certificates`.`gift_certificate` (`id_gift_certificate`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gift_certificate_has_order_order1`
    FOREIGN KEY (`id_purchase`)
    REFERENCES `gift_certificates`.`purchase` (`id_purchase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

CREATE VIEW user_purchases_cost AS 
 SELECT user.id_user, SUM(cost) AS full_sum
  FROM user 
  JOIN purchase
  ON(user.id_user=purchase.id_user) 
  GROUP BY user.id_user;

CREATE VIEW user_tags AS 
 SELECT id_user, tag.id_tag, name_tag, COUNT(tag.id_tag) AS count_tag 
  FROM tag 
  JOIN gift_certificate_tag
  ON(tag.id_tag=gift_certificate_tag.id_tag)
  JOIN purchase_gift_certificate
  ON (gift_certificate_tag.id_gift_certificate=purchase_gift_certificate.id_gift_certificate)
  JOIN purchase
  ON(purchase_gift_certificate.id_purchase=purchase.id_purchase)
  GROUP BY tag.id_tag, id_user;
